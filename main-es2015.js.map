{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/weather.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC0C;;;;;;ICYhF,6EAA0D;IAAA,uDAC1D;IADA,4DAA0D;;;IAAtB,gFAAoB;IAAE,0DAC1D;IAD0D,yFAC1D;;;IALN,yEACE;IAAA,2EACE;IAAA,6EACE;IAAA,6EAA0C;IAAA,sEAAW;IAAA,4DAAS;IAC9D,2HAA0D;IAC1D,oEACO;IAJT,4DACE;IAMF,uEACF;IAAA,qEAAe;IACjB,4DAAM;;;;IAVU,0DAAmB;IAAnB,+EAAmB;IAGrB,0DAA2B;IAA3B,kFAA2B;;;IAR3C,sEAIE;IAAA,8GACE;IAYJ,4DAAM;;;IAb6B,0DAAqE;IAArE,6JAAqE;;;IAqBxG,wEACE;IAAA,0EACE;IAAA,oEAAG;IAAA,uDAAa;IAAA,4DAAI;IACpB,oEAAG;IAAA,uDAAkB;IAAA,4DAAI;IACzB,oEAAG;IAAA,uDAAa;IAAA,4DAAI;IACtB,4DAAM;IAIR,qEAAe;;;IAPR,0DAAa;IAAb,6EAAa;IACb,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAa;IAAb,6EAAa;;ADxBjB,MAAM,YAAY;IAevB,YAAmB,EAAkB,EAAU,EAAe;QAA3C,OAAE,GAAF,EAAE,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QAd9D,WAAM,GAAG;YACP,EAAE,KAAK,EAAE,MAAM,EAAE;YACjB,EAAE,KAAK,EAAE,UAAU,EAAE;SACtB,CAAC;QACF,YAAO,GAAG,EAAE,CAAC;QAEb,eAAU,GAAG,EAAE,CAAC;QAKhB,aAAQ,GAAC,EAAE,CAAC;QAIV,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,SAAS,EAAE,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAC/B,CAAC,CAAC;IACL,CAAC;IACD,QAAQ;QACN,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAwB,CAAC;QAC1D,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvB,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,IAAI,EAAE,EAAE;SACT,CAAC,CAAC,CAAC;IACN,CAAC;IAED,QAAQ;QACN,MAAM,MAAM,GAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK;QACrD,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QAExE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;QACvE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,IAAI,CAAC,EAAE,CAAC,UAAU,CAAK,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CACpE,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,KAAK,IAAI,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE;gBAC/B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;gBACpD,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;aACpC;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QACxG,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;QACF,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAwB,CAAC;QAC1D,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvB,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,IAAI,EAAE,EAAE;SACT,CAAC,CAAC,CAAC;IACN,CAAC;;wEAvDU,YAAY;4FAAZ,YAAY;QCVzB,yEAGE;QAAA,0EAEE;QAFuB,wIAAY,cAAU,IAAC;QAE9C,wGAIE;QAcF,4EAAsB;QAAA,8DAAG;QAAA,4DAAS;QACpC,4DAAO;QAEP,yEACE;QAAA,0EACE;QAAA,uEACF;QAAA,4DAAO;QACP,0HACE;QAUJ,4DAAM;QAER,4DAAM;;QAxCE,0DAAkB;QAAlB,+EAAkB;QAEjB,0DAAqC;QAArC,mGAAqC;QAyB5B,0DAA+B;QAA/B,mFAA+B;;6FDpBpC,YAAY;cANxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACM;AACG;;AAejD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,kEAAmB;YACnB,qEAAgB;SACjB;mIAIU,SAAS,mBAXlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,kEAAmB;QACnB,qEAAgB;6FAKP,SAAS;cAbrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,kEAAmB;oBACnB,qEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAA2C;;;AAUpC,MAAM,cAAc;IAIzB,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAF3C,WAAM,GAAG,kCAAkC,CAAC;QAC5C,QAAG,GAAG,oDAAoD,CAAC;IAG3D,CAAC;IAGM,UAAU,CAAI,IAAY,EAAC,IAAY;QAC5C,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC,CAAC;IAC/F,CAAC;;4EAXU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { WeatherService } from './weather.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  cities = [\n    { value: 'Kyiv' },\n    { value: 'Tel Aviv' }\n  ];\n  resList = [];\n  watherName;\n  watherList = [];\n  selectedunit;\n  cityName;\n  error;\n  celNum;\n  arrOfObg=[];\n  public selectedCity: any;\n  form: FormGroup;\n  constructor(public wh: WeatherService, private fb: FormBuilder) {\n    this.form = this.fb.group({\n      published: true,\n      credentials: this.fb.array([]),\n    });\n  }\n  ngOnInit() {\n    const creds = this.form.controls.credentials as FormArray;\n    creds.push(this.fb.group({\n      city: ['', [Validators.required]],\n      unit: '',\n    }));\n  }\n\n  onSubmit() {\n    const cityOp =this.form.controls['credentials'].value\n    const data = cityOp.slice(-1)[0].city;\n    this.selectedCity = data;\n    this.selectedunit = this.form.controls['credentials'].value['0']['unit']\n\n    this.resList.push(this.form.controls['credentials'].value['0']['city'])\n    console.log(this.selectedCity);\n    this.wh.getWeather<[]>(this.selectedCity, this.selectedunit).subscribe(\n      res => {\n        console.log(res)\n        for (let current of res['list']) {\n          this.watherName = current['weather'][0].description;\n          this.celNum = current['main'].temp;\n        }\n        this.watherList.push({ 'city': res['city'].name, 'cloudName': this.watherName, 'unit': this.celNum });\n      },\n      err => {\n        console.log(err);\n      }\n    );\n    const creds = this.form.controls.credentials as FormArray;\n    creds.push(this.fb.group({\n      city: [''],\n      unit: '',\n    }));\n  }\n\n\n}\n","<div class=\"center\">\n\n\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n\n    <div *ngIf=\"form.controls.published.value\">\n\n\n\n      <div formArrayName=\"credentials\" *ngFor=\"let creds of form.controls.credentials?.value; let i = index\">\n        <ng-container [formGroupName]=\"i\">\n          <select formControlName=\"city\">\n            <option value=\"\" selected disabled hidden>Choose here</option>\n            <option *ngFor=\"let city of cities\" [value]=\"city.value\"> {{city.value}}\n            <option>\n          </select>\n\n\n          <input placeholder=\"units(standard,metric,imperial)\" formControlName=\"unit\">\n        </ng-container>\n      </div>\n\n    </div>\n    <button type=\"submit\">Add</button>\n  </form>\n\n  <div class=\"dash\">\n    <span class=\"tt\">\n      Weather in\n    </span>\n    <ng-container *ngFor='let list of watherList'>\n      <div class=\"weRes\">\n        <p>{{list.city}}</p>\n        <p>{{list.cloudName}}</p>\n        <p>{{list.unit}}</p>\n      </div>\n\n\n\n    </ng-container>\n\n  </div>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\ninterface Langs {\n  value: string;\n  viewValue: string;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  APIkey = '0d7303c17ee3d3482cd82a2ad273a90d';\n  URL = 'http://api.openweathermap.org/data/2.5/forecast?q=';\n  constructor(private _httpClient: HttpClient) {\n\n  }\n\n\n  public getWeather<T>(city: string,unit: string): Observable<T> {\n    return this._httpClient.get<T>(this.URL + city + '&APPID=' + this.APIkey + '&units=' + unit);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}