{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/weather.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","wh","fb","cities","value","resList","watherList","arrOfObg","form","group","published","credentials","array","creds","controls","push","city","required","unit","cityOp","data","slice","selectedCity","selectedunit","console","log","getWeather","subscribe","res","current","watherName","description","celNum","temp","name","err","onSubmit","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","WeatherService","_httpClient","APIkey","URL","get","providedIn","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { WeatherService } from './weather.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  cities = [\n    { value: 'Kyiv' },\n    { value: 'Tel Aviv' }\n  ];\n  resList = [];\n  watherName;\n  watherList = [];\n  selectedunit;\n  cityName;\n  error;\n  celNum;\n  arrOfObg=[];\n  public selectedCity: any;\n  form: FormGroup;\n  constructor(public wh: WeatherService, private fb: FormBuilder) {\n    this.form = this.fb.group({\n      published: true,\n      credentials: this.fb.array([]),\n    });\n  }\n  ngOnInit() {\n    const creds = this.form.controls.credentials as FormArray;\n    creds.push(this.fb.group({\n      city: ['', [Validators.required]],\n      unit: '',\n    }));\n  }\n\n  onSubmit() {\n    const cityOp =this.form.controls['credentials'].value\n    const data = cityOp.slice(-1)[0].city;\n    this.selectedCity = data;\n    this.selectedunit = this.form.controls['credentials'].value['0']['unit']\n\n    this.resList.push(this.form.controls['credentials'].value['0']['city'])\n    console.log(this.selectedCity);\n    this.wh.getWeather<[]>(this.selectedCity, this.selectedunit).subscribe(\n      res => {\n        console.log(res)\n        for (let current of res['list']) {\n          this.watherName = current['weather'][0].description;\n          this.celNum = current['main'].temp;\n        }\n        this.watherList.push({ 'city': res['city'].name, 'cloudName': this.watherName, 'unit': this.celNum });\n      },\n      err => {\n        console.log(err);\n      }\n    );\n    const creds = this.form.controls.credentials as FormArray;\n    creds.push(this.fb.group({\n      city: [''],\n      unit: '',\n    }));\n  }\n\n\n}\n","<div class=\"center\">\n\n\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n\n    <div *ngIf=\"form.controls.published.value\">\n\n\n\n      <div formArrayName=\"credentials\" *ngFor=\"let creds of form.controls.credentials?.value; let i = index\">\n        <ng-container [formGroupName]=\"i\">\n          <select formControlName=\"city\">\n            <option value=\"\" selected disabled hidden>Choose here</option>\n            <option *ngFor=\"let city of cities\" [value]=\"city.value\"> {{city.value}}\n            <option>\n          </select>\n\n\n          <input placeholder=\"units(standard,metric,imperial)\" formControlName=\"unit\">\n        </ng-container>\n      </div>\n\n    </div>\n    <button type=\"submit\">Add</button>\n  </form>\n\n  <div class=\"dash\">\n    <span class=\"tt\">\n      Weather in\n    </span>\n    <ng-container *ngFor='let list of watherList'>\n      <div class=\"weRes\">\n        <p>{{list.city}}</p>\n        <p>{{list.cloudName}}</p>\n        <p>{{list.unit}}</p>\n      </div>\n\n\n\n    </ng-container>\n\n  </div>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\ninterface Langs {\n  value: string;\n  viewValue: string;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  APIkey = '0d7303c17ee3d3482cd82a2ad273a90d';\n  URL = 'http://api.openweathermap.org/data/2.5/forecast?q=';\n  constructor(private _httpClient: HttpClient) {\n\n  }\n\n\n  public getWeather<T>(city: string,unit: string): Observable<T> {\n    return this._httpClient.get<T>(this.URL + city + '&APPID=' + this.APIkey + '&units=' + unit);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}